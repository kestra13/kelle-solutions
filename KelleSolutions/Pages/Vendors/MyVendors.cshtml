@page
@using KelleSolutions.Models
@model KelleSolutions.Pages.Entities.EntitiesModel
@{
    ViewData["Title"] = "Vendors";
}

<link rel="stylesheet" href="~/css/mainpages.css" />
<link href="https://fonts.googleapis.com/css2?family=Sora:wght@100;200;250;300;400;500;600&display=swap" rel="stylesheet" />
<style>
    .nav-bar-icons {
        display: flex;
        flex-direction: column;
        align-items: flex-start;
        gap: 20px;
    }

    .nav-bar-icons.content-container {
        display: flex;
        align-items: center;
        gap: 20px;
    }

    .btn.btn-gray {
        background-color: #f1f1f1 !important;
        border: none !important;
        box-shadow: none !important;
    }

    .btn.btn-gray:hover {
        background-color: #e3e3e3 !important;
    }
    .btn.btn-purple-active {
        background-color: #4a154b !important;
        border: none !important;
        box-shadow: none !important;
    }

    .btn.btn-purple-active .btn-text {
        color: white !important;
    }

    .menu-icon {
        cursor: pointer;
    }

    .btn-icon {
        height: 20px;
        width: 20px;
        margin-right: 8px;
        vertical-align: middle;
    }

    .btn-text {
        color: #585858;
    }

    .id-link {
        color: #4a154b;
        text-decoration: none;
        font-weight: 500;
    }
    
    .id-link:hover {
        text-decoration: underline;
        color: #e01e5a;
    }
    
    .dropdown-toggle::after {
        margin: 0px -4px 0px 9px;              /* space between text and arrow */
        vertical-align: middle;        /* align with text */
        border-top-color: #585858 !important; /* change arrow color */
        border-width: 0.35em 0.35em 0;   /* change arrow size */    
    }

    #vendorsDropdown.dropdown-toggle::after {
        margin: 0px -4px 0px 9px;              /* space between text and arrow */
        vertical-align: middle;        /* align with text */
        border-top-color: #ffffff !important; /* change arrow color */
        border-width: 0.35em 0.35em 0;   /* change arrow size */
    }

</style>
@if (User.IsInRole("Admin") || User.IsInRole("Broker")) {
    <div class="header-section">

    <div class="button-container d-flex align-items-center" style="gap: 12px;">
    <!-- DASHBOARD -->
    <a href="/Admin/adminDashboard" class="btn btn-primary btn-gray rounded-pill d-flex align-items-center">
        <img src="~/images/dashboard_logo_selected.svg" alt="" class="btn-icon">
        <span class="btn-text">Dashboard</span>
    </a>

    <!-- LISTINGS Dropdown -->
    <div class="dropdown d-inline-block" >
        <button class="btn btn-primary btn-gray rounded-pill dropdown-toggle d-flex align-items-center"
                type="button"
                id="listingsDropdown"
                data-bs-toggle="dropdown"
                aria-expanded="false">
            <img src="~/images/listing_logo_notSelected.svg" alt="" class="btn-icon">
            <span class="btn-text">Listings</span>
        </button>
        <ul class="dropdown-menu" aria-labelledby="listingsDropdown">
            <li><a class="dropdown-item" href="/Listings/MyListings">My Listings</a></li>
            <li><a class="dropdown-item" href="/Listings/AllListings">All Listings</a></li>
        </ul>
    </div>

    <!-- PROPERTIES Dropdown -->
    <div class="dropdown d-inline-block">
        <button class="btn btn-primary btn-gray rounded-pill dropdown-toggle d-flex align-items-center" 
                type="button" 
                id="propertiesDropdown" 
                data-bs-toggle="dropdown" 
                aria-expanded="false">
            <img src="~/images/properties.svg" alt="" class="btn-icon">
            <span class="btn-text">Properties</span>
        </button>
        <ul class="dropdown-menu" aria-labelledby="propertiesDropdown">
            <li><a class="dropdown-item" href="/Properties/MyProperties">My Properties</a></li>
            <li><a class="dropdown-item" href="/Properties/AllProperties">All Properties</a></li>
        </ul>
    </div>

    <!-- VENDORS Dropdown -->
    <div class="dropdown d-inline-block">
        <button class="btn btn-primary btn-purple-active rounded-pill dropdown-toggle d-flex align-items-center" 
                type="button" 
                id="vendorsDropdown" 
                data-bs-toggle="dropdown" 
                aria-expanded="false">
            <img src="~/images/selected_vendors.svg" alt="" class="btn-icon">
            <span class="btn-text">Vendors</span>
        </button>
        <ul class="dropdown-menu" aria-labelledby="propertiesDropdown">
            <li><a class="dropdown-item" href="/Vendors/MyVendors">My Vendors</a></li> 
            <li><a class="dropdown-item" href="/#">All Vendors</a></li> <!-- placeholder for entities/vendors page-->
        </ul>
    </div>
    
    <!-- ACTIONS -->
    <a href="/Actions/MyActions" class="btn btn-primary btn-gray rounded-pill d-flex align-items-center">
        <img src="~/images/actions_logo_notSelected.svg" alt="" class="btn-icon">
        <span class="btn-text">Actions</span>
    </a>

    <!-- LEADS Dropdown -->
    <div class="dropdown d-inline-block">
        <button class="btn btn-primary btn-gray rounded-pill dropdown-toggle d-flex align-items-center"
                type="button"
                id="leadsDropdown"
                data-bs-toggle="dropdown"
                aria-expanded="false">
            <img src="~/images/leads_logo_notSelected.svg" alt="" class="btn-icon">
            <span class="btn-text">Leads</span>
        </button>
        <ul class="dropdown-menu" aria-labelledby="leadsDropdown">
            <li><a class="dropdown-item" href="/Leads/MyLeads">My Leads</a></li>
            <li><a class="dropdown-item" href="/Leads/Leads">All Leads</a></li>
        </ul>
    </div>

    <!-- PEOPLE -->
    <a href="/People/People" class="btn btn-primary btn-gray rounded-pill d-flex align-items-center">
        <img src="~/images/people_logo_notSelected.svg" alt="" class="btn-icon">
        <span class="btn-text">People</span>
    </a>



    </div>
    </div>

    <!-- SETTINGS button NOT NEEDED, # uncomment to show -->
    @* <a href="/Admin/Settings" 
       class="btn btn-primary btn-gray rounded-pill d-flex align-items-center justify-content-center p-2 position-absolute" 
       style="width: 40px; height: 40px; right: 130px; top: 85px;">
        <img src="~/images/vertical_dots_button.svg" alt="" style="width: 24px; height: 24px;">
    </a> *@

}
else if (User.IsInRole("Agent")) {
    <div class="header-section">
        <div class="button-container d-flex align-items-center" style="gap: 12px;">
        <!-- DASHBOARD -->
        <a href="/Dashboard" class="btn btn-primary btn-gray rounded-pill d-flex align-items-center">
            <img src="~/images/dashboard_logo_selected.svg" alt="" class="btn-icon">
            <span class="btn-text">Dashboard</span>
        </a>

        <!-- LISTINGS Dropdown -->
        <a href="/Listings/MyListings" class="btn btn-primary btn-gray rounded-pill d-flex align-items-center">
            <img src="~/images/listing_logo_notSelected.svg" alt="" class="btn-icon">
            <span class="btn-text">Listings</span>
        </a>

        <!-- ACTIONS -->
        <a href="/Actions/MyActions" class="btn btn-primary btn-gray rounded-pill d-flex align-items-center">
            <img src="~/images/actions_logo_notSelected.svg" alt="" class="btn-icon">
            <span class="btn-text">Actions</span>
        </a>

        <!-- LEADS Dropdown -->
        <a href="/Leads/MyLeads" class="btn btn-primary btn-gray rounded-pill d-flex align-items-center">
            <img src="~/images/leads_logo_notSelected.svg" alt="" class="btn-icon">
            <span class="btn-text">Leads</span>
        </a>

        <!-- PEOPLE -->
        <a href="/People/MyPeople" class="btn btn-primary btn-gray rounded-pill d-flex align-items-center">
            <img src="~/images/people_logo_notSelected.svg" alt="" class="btn-icon">
            <span class="btn-text">People</span>
        </a>

        <div class="dropdown">
            <button id="menuButton" class="btn btn-primary btn-purple-active rounded-pill d-flex align-items-center justify-content-center"
                    data-bs-toggle="dropdown" aria-expanded="false" style="padding: 8px; border: none;">
                <span id="menuIcon">
                    <!-- Initial Hamburger SVG -->
                    <svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="24px" fill="#5f6368">
                        <path d="M140-254.62v-59.99h680v59.99H140ZM140-450v-60h680v60H140Zm0-195.39v-59.99h680v59.99H140Z"/>
                    </svg>
                </span>
            </button>

            <ul class="dropdown-menu dropdown-menu-end" id="customDropdown">
                <li>
                    <a class="dropdown-item" href="/Properties/MyProperties">
                        <img src="~/images/properties.svg" class="btn-icon"> Properties
                    </a>
                </li>
                <li>
                    <a class="dropdown-item" href="#">
                        <img src="~/images/selected_vendors.svg" class="btn-icon"> Vendors
                    </a>
                </li>
            </ul>
        </div>

        <!-- SETTINGS button NOT NEEDED, # uncomment to show -->
        @* <a href="/Admin/Settings" 
           class="btn btn-primary btn-gray rounded-pill d-flex align-items-center justify-content-center p-2 position-absolute" 
           style="width: 40px; height: 40px; right: 130px; top: 85px;">
            <img src="~/images/vertical_dots_button.svg" alt="" style="width: 24px; height: 24px;">
        </a> *@

    </div>
    </div>

}

<div class="header-section">
    <p>
        <a href="/Dashboard">
            <svg xmlns="http://www.w3.org/2000/svg" height="1.2em" viewBox="0 -960 960 960" width="1.2em" fill="#5f6368">
                <path d="M240-200h133.85v-237.69h212.3V-200H720v-360L480-740.77 240-560v360Zm-60 60v-450l300-225.77L780-590v450H526.15v-237.69h-92.3V-140H180Zm300-330.38Z"/>
            </svg>
        </a>
        <span>/</span> <span class="pagename-text">Vendors</span>
    </p>
</div>

<div class="buttons">
    <div class="d-flex">
        <div class="dropdown me-2">
            <label for="dropdownButton" class="button-label">Vendor type</label>
            <button id="dropdownButton" class="btn btn-outline dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                Select Options
            </button>
            <ul class="dropdown-menu p-2">
                <li>
                    <input class="form-check-input me-2 option-checkbox" type="checkbox" id="broker">
                    <label class="form-check-label" for="broker">Broker</label>
                </li>
                <li>
                    <input class="form-check-input me-2 option-checkbox" type="checkbox" id="contractor">
                    <label class="form-check-label" for="contractor">Contractor</label>
                </li>
                <li>
                    <input class="form-check-input me-2 option-checkbox" type="checkbox" id="escrow">
                    <label class="form-check-label" for="escrow">Escrow</label>
                </li>
            </ul>
        </div>
    </div>
    <a href="/Vendors/CreateEntities">
        <button class="gradient-button">
            Add
            <svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="24px" fill="#5f6368">
                <path d="M440-440H200v-80h240v-240h80v240h240v80H520v240h-80v-240Z"/>
            </svg>
        </button>
    </a>
</div>

<div class="content-container">
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Business Name</th>
                <th>Category</th>
                <th>Phone</th>
                <th>Location</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Entities != null && Model.Entities.Any())
            {
                @foreach (var entity in Model.Entities)
                {
                    <tr>
                        <td>@entity.Code</td>
                        <td>@entity.EntityName</td>
                        <td>
                            @switch (entity.Category)
                            {
                                case CategoryEnum.Category1:
                                    <span>Broker</span>
                                    break;
                                case CategoryEnum.Category2:
                                    <span>Contractor</span>
                                    break;
                                default:
                                    <span>Escrow</span>
                                    break;
                            }
                        </td>
                        <td>@entity.Phone</td>
                        <td>
                            @if (!string.IsNullOrEmpty(entity.City))
                            {
                                @($"{entity.City}, {entity.StateProvince} {entity.Postal}")
                            }
                        </td>
                        <td>
                            <button class="btn btn-primary me-2" 
                                onclick="prepareUpdate(
                                @entity.Code, 
                                '@entity.EntityName', 
                                '@((int)entity.Category)', 
                                '@entity.Phone',
                                '@entity.Country',
                                '@entity.City', 
                                '@entity.StateProvince', 
                                '@entity.Postal', 
                                '@entity.Street',
                                '@entity.Website')" 
                                data-bs-toggle="modal" 
                                data-bs-target="#editEntityModal">
                                Edit
                            </button>

                            <button class="btn btn-danger" onclick="prepareDelete(@entity.Code)" data-bs-toggle="modal" data-bs-target="#deleteEntityModal">Delete</button>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr class="no-vendors-message">
                    <td colspan="6" class="text-center">No vendors found. Add a new vendor to get started.</td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Edit Vendor Modal (Multi-Step) -->
<div class="modal fade" id="editEntityModal" tabindex="-1">
  <div class="modal-dialog modal-md">
    <div class="modal-content">
        <div class="modal-header">
            <h5 class="modal-title">Edit Vendor</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>

        <div class="modal-body">
            <form method="post" asp-page-handler="Update" id="editEntityForm">
                <input type="hidden" id="updateId" name="id" />

                <!-- Step 1 -->
                <div class="form-step" id="editStep1">
                    <div class="mb-3">
                        <label for="updateName" class="form-label">Business Name</label>
                        <input type="text" class="form-control" id="updateName" name="EntityName" required />
                    </div>

                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="updateCategory" class="form-label">Category</label>
                            <select class="form-control" id="updateCategory" name="Category" required>
                                <option value="0">Broker</option>
                                <option value="1">Contractor</option>
                                <option value="2">Escrow</option>
                            </select>
                        </div>

                        <div class="col-md-6 mb-3">
                            <label for="updatePhone" class="form-label">Phone</label>
                            <input type="tel" class="form-control" id="updatePhone" name="Phone" required />
                        </div>
                    </div>

                    <div class="mb-3">
                        <label for="updateWebsite" class="form-label">Website</label>
                        <input type="url" class="form-control" id="updateWebsite" name="Website" placeholder="https://example.com" />
                    </div>
                </div>

                <!-- Step 2 -->
                <div class="form-step d-none" id="editStep2">
                    <div class="mb-3">
                        <label for="Street" class="form-label">Street Address</label>
                        <input type="text" class="form-control" id="updateStreet" name="Street" required />
                    </div>

                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="City" class="form-label">City</label>
                            <input type="text" class="form-control" id="updateCity" name="City" required />
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="StateProvince" class="form-label">State/Province</label>
                            <input type="text" class="form-control" id="updateStateProvince" name="StateProvince" required />
                        </div>
                    </div>
                    <div class="row mb">
                        <div class="col-md-6 mb-3">
                            <label for="Country" class="form-label">Country</label>
                            <input type="text" class="form-control" id="updateCountry" name="Country" required />
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="Postal" class="form-label">Postal Code</label>
                            <input type="text" class="form-control" id="updatePostal" name="Postal" required />
                        </div>
                    </div>
                </div>

                <div class="modal-footer d-flex justify-content-between position-relative">
                    <div>
                        <button type="button" class="btn btn-outline-primary" id="editBackBtn" disabled>Back</button>
                    </div>
                    <div class="position-absolute start-50 translate-middle-x">
                        <button type="submit" class="btn gradient-button-home mx-auto" name="saveExit">Save & Exit</button>
                    </div>
                    <div>
                        <button type="button" class="btn btn-outline-primary" id="editNextBtn">Next</button>
                    </div>
                </div>
            </form>
        </div>
        </div>
  </div>
</div>


<!-- Delete Modal -->
<div class="modal fade" id="deleteEntityModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Delete Vendor</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this vendor?</p>
                <form method="post" asp-page-handler="Delete">
                    <input type="hidden" id="deleteId" name="id" />
                    <div class="mt-4">
                        <button type="submit" class="btn btn-danger">Delete</button>
                        <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.2/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        function prepareUpdate(id, name, category, phone, country, city, stateProvince, postal, street, website) {
            document.getElementById('updateId').value = id;
            document.getElementById('updateName').value = name;
            document.getElementById('updateCategory').value = category;
            document.getElementById('updatePhone').value = phone;
            document.getElementById('updateCountry').value = country;
            document.getElementById('updateCity').value = city;
            document.getElementById('updateStateProvince').value = stateProvince;
            document.getElementById('updatePostal').value = postal;
            document.getElementById('updateStreet').value = street;
            document.getElementById('updateCountry').value = country;
        }

        function prepareDelete(id) {
            document.getElementById('deleteId').value = id;
        }

        // Handle category filter checkboxes
        document.querySelectorAll('.option-checkbox').forEach(checkbox => {
            checkbox.addEventListener('change', function() {
                const selectedCategories = [];
                
                // Get all selected categories
                if (document.getElementById('broker').checked) selectedCategories.push(0);
                if (document.getElementById('contractor').checked) selectedCategories.push(1);
                if (document.getElementById('escrow').checked) selectedCategories.push(2);

                // Get all table rows except the header
                const rows = document.querySelectorAll('table tbody tr');
                
                rows.forEach(row => {
                    const categoryCell = row.querySelector('td:nth-child(3)'); // Category is in the third column
                    if (categoryCell) {
                        if (selectedCategories.length === 0) {
                            // If no categories are selected, show all rows
                            row.style.display = '';
                        } else {
                            // Get the category value from the cell
                            let categoryValue;
                            if (categoryCell.textContent.trim() === 'Broker') categoryValue = 0;
                            else if (categoryCell.textContent.trim() === 'Contractor') categoryValue = 1;
                            else if (categoryCell.textContent.trim() === 'Escrow') categoryValue = 2;

                            // Show/hide row based on whether its category is selected
                            row.style.display = selectedCategories.includes(categoryValue) ? '' : 'none';
                        }
                    }
                });

                // Update "No vendors found" message visibility
                const visibleRows = Array.from(rows).filter(row => row.style.display !== 'none');
                const noVendorsRow = document.querySelector('tr td[colspan="6"]')?.parentElement;
                if (noVendorsRow) {
                    if (visibleRows.length === 0 && !noVendorsRow.classList.contains('no-vendors-message')) {
                        // If no rows are visible and it's not the "No vendors" message, show the message
                        noVendorsRow.style.display = '';
                    } else {
                        // Hide the "No vendors" message if there are visible rows
                        noVendorsRow.style.display = 'none';
                    }
                }
            });
        });
    </script>
    <script>
        let editStep = 1;
        const editSteps = 2;

        const nextBtn = document.getElementById("editNextBtn");
        const backBtn = document.getElementById("editBackBtn");
        const form = document.getElementById("editEntityForm");

        nextBtn.addEventListener("click", () => {
            if (editStep === editSteps) {
                // If on last step, submit the form
                form.submit();
            } else {
                // Otherwise, move to next step
                document.getElementById(`editStep${editStep}`).classList.add("d-none");
                editStep++;
                document.getElementById(`editStep${editStep}`).classList.remove("d-none");
                backBtn.disabled = editStep === 1;
                nextBtn.textContent = editStep === editSteps ? "Finish" : "Next";
            }
        });

        backBtn.addEventListener("click", () => {
            if (editStep > 1) {
                document.getElementById(`editStep${editStep}`).classList.add("d-none");
                editStep--;
                document.getElementById(`editStep${editStep}`).classList.remove("d-none");
                backBtn.disabled = editStep === 1;
                nextBtn.textContent = "Next";
            }
        });
    </script>
}
