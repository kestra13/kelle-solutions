@using Microsoft.AspNetCore.Identity
@using KelleSolutions.Models

@* Injecting SignInManager and UserManager services to handle user authentication *@
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

@* Navigation list for user-related links such as login, register, and manage account *@
<ul class="navbar-nav">
    @* Check if the user is signed in *@
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle username-align" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                @await GetUserNameAsync()
            </a>
            <ul class="dropdown-menu">
                <li><a class="dropdown-item" asp-area="Identity" asp-page="/Account/Manage/Index">Profile</a></li>
                <li><a class="dropdown-item" asp-page="/AT_Dashboard">Dashboard</a></li>
                <li>
                    <form id="logoutForm" class="dropdown-item p-0 m-0" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/Index", new { area = "" })">
                        <button type="submit" class="btn btn-link dropdown-item">Logout</button>
                    </form>
                </li>
            </ul>
        </li>
        @* Display the user's profile icon *@
        <li class="nav-item">
            <a id="manage" class="nav-link" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
                <img class="img-fluid" src="/images/profileicon.png" alt="profileicon" style="width:35px;height:35px;position:relative; right:5px;">
            </a>
        </li>
    }
    else
    {
        @* If not signed in, show links to Register and Login pages *@
        @*<li class="nav-item">
            <a class="nav-link" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li> only admin can register*@
        <li class="nav-item">
            <a class="nav-link" id="login" asp-area="Identity" asp-page="/Account/Login" asp-route-returnUrl="@Url.Page("/AT_Dashboard")">Login</a>
        </li>
    }
</ul>

@functions {
    private async Task<string> GetUserNameAsync()
    {
        var user = await UserManager.GetUserAsync(User);
        return user != null ? user.UserName : "User";
    }
}