@page
@model KelleSolutions.Pages.People.PeopleModel

@{
    ViewData["Title"] = "People";
}

<link rel="stylesheet" href="~/css/mainpages.css" />
<link href="https://fonts.googleapis.com/css2?family=Sora:wght@100;200;250;300;400;500;600&display=swap" rel="stylesheet">

<body>
  <div class="header-section">
      <p>
          <a href="/Dashboard">
              <svg xmlns="http://www.w3.org/2000/svg" height="1.2em" viewBox="0 -960 960 960" width="1.2em" fill="#5f6368">
                  <path d="M240-200h133.85v-237.69h212.3V-200H720v-360L480-740.77 240-560v360Zm-60 60v-450l300-225.77L780-590v450H526.15v-237.69h-92.3V-140H180Zm300-330.38Z"/>
              </svg>
          </a>
          <span>/</span> 
          <a href="/People/People">People</a>
          <span>/</span> 
          <span class="pagename-text">View People</span>
      </p>
  </div>

  <div class="buttons">
      <div class="d-flex">
          <!-- People Source Dropdown -->
          <div class="dropdown me-2">
              <label for="dropdownSource" class="button-label">People source</label>
              <button id="dropdownSource" class="btn btn-outline dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                  Select Options
              </button>
              <ul class="dropdown-menu p-2">
                  <li>
                      <input class="form-check-input me-2 option-checkbox" type="checkbox" id="source1">
                      <label class="form-check-label" for="source1">Option 1</label>
                  </li>
                  <li>
                      <input class="form-check-input me-2 option-checkbox" type="checkbox" id="source2">
                      <label class="form-check-label" for="source2">Option 2</label>
                  </li>
                  <li>
                      <input class="form-check-input me-2 option-checkbox" type="checkbox" id="source3">
                      <label class="form-check-label" for="source3">Option 3</label>
                  </li>
              </ul>
          </div>

          <!-- People Status Dropdown -->
          <div class="dropdown">
              <label for="dropdownStatus" class="button-label">People status</label>
              <button id="dropdownStatus" class="btn btn-outline dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                  Select Options
              </button>
              <ul class="dropdown-menu p-2">
                  <li>
                      <input class="form-check-input me-2 option-checkbox" type="checkbox" id="statusAll">
                      <label class="form-check-label" for="statusAll">All</label>
                  </li>
                  <li>
                      <input class="form-check-input me-2 option-checkbox" type="checkbox" id="statusHold">
                      <label class="form-check-label" for="statusHold">On Hold</label>
                  </li>
                  <li>
                      <input class="form-check-input me-2 option-checkbox" type="checkbox" id="statusActive">
                      <label class="form-check-label" for="statusActive">Active</label>
                  </li>
                  <li>
                      <input class="form-check-input me-2 option-checkbox" type="checkbox" id="statusClosed">
                      <label class="form-check-label" for="statusClosed">Closed</label>
                  </li>
              </ul>
          </div>
      </div>
      @if (User.IsInRole("Admin") || User.IsInRole("Broker")) {

    <a href="/People/CreatePerson">
        <button class="gradient-button">
            Add
            <svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="24px" fill="#5f6368">
                <path d="M440-440H200v-80h240v-240h80v240h240v80H520v240h-80v-240Z"/>
            </svg>
        </button>
    </a>
    
    }
  </div>

  <div class="content-container">
      <table class="table">
          <thead>
              <tr>
                  <th>Code</th>
                  <th>Last Name</th>
                  <th>First Name</th>
                  <th>Phone</th>
                  <th>Email</th>
                  <th>Created</th>
                  <th>Category</th>
                  @if (User.IsInRole("Admin") || User.IsInRole("Broker")) {<th>Actions</th>} <!-- Only show the actions column for admins and brokers -->
              </tr>
          </thead>
          <tbody>
              @foreach (var item in Model.PeopleList)
              {
                  <tr>
                      <td><a href="/People/ViewPerson?code=@item.Code" style="text-decoration: none;">@item.Code</a> </td>
                      <td>@item.NameLast</td>
                      <td>@item.NameFirst</td>
                      <td>@item.PhonePrimary</td>
                      <td>@item.EmailPrimary</td>
                      <td>@item.Created.ToString("yyyy-MM-dd")</td>
                      <td>@item.Category</td>
                      <td>
                        @if (User.IsInRole("Admin") || User.IsInRole("Broker")){
                            <button type="button"
                                    class="btn btn-sm btn-primary me-2"
                                    data-bs-toggle="modal"
                                    data-bs-target="#updateModal"
                                    data-code="@item.Code">
                                Edit
                            </button>
                            <button type="button" class="btn btn-sm btn-danger" 
                            onclick="confirmDelete(@item.Code, '@item.NameFirst @item.NameLast')">
                            Delete
                        </button>
                        }
                        </td>
                  </tr>
              }
          </tbody>
      </table>
  </div>

  <div class="pagination-section">
      <div class="d-flex justify-content-between align-items-center">
          <div class="rows-per-page-container">
              <label for="pageSize" class="rowamount-label">Rows per page:</label>
              <div class="dropdown-wrapper">
                  <select id="pageSize" class="form-control dropdown-outline" onchange="updatePageSize()">
                    @if (Model.PageSize == 5) {
                        <option value="5" selected>5</option>
                        }
                else
    {
                        <option value="5">5</option>
    }
    
                @if (Model.PageSize == 10)
    {
                        <option value="10" selected>10</option>
    }
                else
    {
                        <option value="10">10</option>
    }
    
                @if (Model.PageSize == 20)
    {
                        <option value="20" selected>20</option>
    }
                else
    {
                        <option value="20">20</option>
    }
    
             @if (Model.PageSize == 50)
    {
                         <option value="50" selected>50</option>
    }
            else
    {
                        <option value="50">50</option>
    }
</select>

                  <svg class="dropdown-icon" xmlns="http://www.w3.org/2000/svg" height="16px" viewBox="0 0 24 24" width="16px" fill="#5f6368">
                      <path d="M7 10l5 5 5-5z"/>
                  </svg>
              </div>
          </div>
      </div>

      <div class="page-navigation">
          <div class="page-desc">
              <span>
                  @((Model.PageNumber - 1) * Model.PageSize + 1) - 
                  @(System.Math.Min(Model.PageNumber * Model.PageSize, Model.TotalCount))
                  of @Model.TotalCount
              </span>
          </div>

          <div class="page-btn">
              @if (Model.PageNumber > 1)
              {
                  <a href="?PageNumber=@(Model.PageNumber - 1)&PageSize=@Model.PageSize">
                      <svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="24px" fill="#5f6368">
                          <path d="M560-240 320-480l240-240 56 56-184 184 184 184-56 56Z"/>
                      </svg>
                  </a>
              }
              else
              {
                  <span class="disabled-arrow">
                      <svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="24px" fill="#d3d3d3">
                          <path d="M560-240 320-480l240-240 56 56-184 184 184 184-56 56Z"/>
                      </svg>
                  </span>
              }
          </div>

          <div class="page-btn">
              @if (Model.PageNumber < Model.TotalPages)
              {
                  <a href="?PageNumber=@(Model.PageNumber + 1)&PageSize=@Model.PageSize">
                      <svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="24px" fill="#5f6368">
                          <path d="M504-480 320-664l56-56 240 240-240 240-56-56 184-184Z"/>
                      </svg>
                  </a>
              }
              else
              {
                  <span class="disabled-arrow">
                      <svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="24px" fill="#d3d3d3">
                          <path d="M504-480 320-664l56-56 240 240-240 240-56-56 184-184Z"/>
                      </svg>
                  </span>
              }
          </div>
      </div>
  </div>

  <!-- Delete Confirmation Modal -->
  <div class="modal fade" id="deletePersonModal" tabindex="-1">
      <div class="modal-dialog">
          <div class="modal-content">
              <div class="modal-header">
                  <h5 class="modal-title">Delete Person</h5>
                  <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
              </div>
              <div class="modal-body">
                  <p>Are you sure you want to delete <span id="personName"></span>?</p>
                  <form method="post" id="deleteForm">
                      <input type="hidden" id="personId" name="code" />
                      <div class="mt-4">
                          <button type="submit" class="btn btn-danger" asp-page-handler="Delete">Delete</button>
                          <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
                      </div>
                  </form>
              </div>
          </div>
      </div>
  </div>

<!-- Update Person Modal (Styled like Entities) -->
<div class="modal fade" id="updateModal" tabindex="-1" aria-labelledby="updateModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-md">
        <div class="modal-content">
            <form id="updateForm" method="post">
                <input type="hidden" name="PersonRecord.Code" id="personCode">

                <div class="modal-header">
                    <h5 class="modal-title">Edit Person</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>

                <!-- Step Indicators -->
                <div class="d-flex justify-content-center gap-3 py-2">
                    <div id="stepIndicator1" class="step-indicator">1</div>
                    <div id="stepIndicator2" class="step-indicator">2</div>
                    <div id="stepIndicator3" class="step-indicator">3</div>
                </div>

                <div class="modal-body">
                    <!-- Step 1 -->
                    <div class="form-step" id="personStep1">
                        <div class="mb-3">
                            <label class="form-label">First Name</label>
                            <input type="text" class="form-control" name="PersonRecord.NameFirst">
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Middle Name</label>
                            <input type="text" class="form-control" name="PersonRecord.NameMiddle">
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Last Name</label>
                            <input type="text" class="form-control" name="PersonRecord.NameLast">
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Display Name</label>
                            <input type="text" class="form-control" name="PersonRecord.NameDisplay">
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Headline</label>
                            <input type="text" class="form-control" name="PersonRecord.Headline">
                        </div>
                    </div>

                    <!-- Step 2 -->
                    <div class="form-step d-none" id="personStep2">
                        <div class="row mb-3">
                        <div class="col">
                            <label>Primary Email</label>
                            <input type="email" class="form-control" name="PersonRecord.EmailPrimary">
                        </div>
                        <div class="col">
                            <label>Primary Email Label</label>
                            <input type="text" class="form-control" name="PersonRecord.EmailPrimaryLabel">
                        </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col">
                                <label>Secondary Email</label>
                                <input type="email" class="form-control" name="PersonRecord.EmailSecondary">
                            </div>
                            <div class="col">
                                <label>Secondary Email Label</label>
                                <input type="text" class="form-control" name="PersonRecord.EmailSecondaryLabel">
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col">
                                <label>Primary Phone</label>
                                <input type="text" class="form-control" name="PersonRecord.PhonePrimary">
                            </div>
                            <div class="col">
                                <label>Primary Phone Label</label>
                                <input type="text" class="form-control" name="PersonRecord.PhonePrimaryLabel">
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col">
                                <label>Secondary Phone</label>
                                <input type="text" class="form-control" name="PersonRecord.PhoneSecondary">
                            </div>
                            <div class="col">
                                <label>Secondary Phone Label</label>
                                <input type="text" class="form-control" name="PersonRecord.PhoneSecondaryLabel">
                            </div>
                        </div>
                    </div>

                    <!-- Step 3: Address, Bio, Flags -->
                    <div class="step step-3 d-none" id="personStep3">
                        <div class="row mb-3">
                            <div class="col">
                                <label>Street</label>
                                <input type="text" class="form-control" name="PersonRecord.Street">
                            </div>
                            <div class="col">
                                <label>City</label>
                                <input type="text" class="form-control" name="PersonRecord.City">
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col">
                                <label>State/Province</label>
                                <input type="text" class="form-control" name="PersonRecord.StateProvince">
                            </div>
                            <div class="col">
                                <label>Postal Code</label>
                                <input type="text" class="form-control" name="PersonRecord.Postal">
                            </div>
                            <div class="col">
                                <label>Country</label>
                                <input type="text" class="form-control" name="PersonRecord.Country">
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col">
                                <label>Category</label>
                                <select name="PersonRecord.Category" class="form-select" id="personCategory" required>
                                    <option value="">Select...</option>
                                    <option value="0">Broker</option>
                                    <option value="1">Contractor</option>
                                    <option value="2">Escrow</option>
                                </select>
                            </div>
                            <div class="col">
                                <label>Do Not Market</label>
                                <input type="checkbox" class="form-check-input ms-2" name="PersonRecord.DoNotMarket">
                            </div>
                            <div class="col">
                                <label>Do Not Contact</label>
                                <input type="checkbox" class="form-check-input ms-2" name="PersonRecord.DoNotContact">
                            </div>
                        </div>
                        <div class="mb-3">
                            <label>Comments</label>
                            <textarea class="form-control" name="PersonRecord.Comments"></textarea>
                        </div>
                        <div class="mb-3">
                            <label>Bio</label>
                            <textarea class="form-control" name="PersonRecord.Bio"></textarea>
                        </div>
                    </div>
                </div>

                <div class="modal-footer d-flex justify-content-between position-relative">
                    <div>
                        <button type="button" class="btn btn-outline-primary" id="personBackBtn" disabled>Back</button>
                    </div>
                    <div class="position-absolute start-50 translate-middle-x">
                        <button type="submit" class="btn gradient-button-home d-none" id="personSubmitBtn">Save & Exit</button>
                    </div>
                    <div>
                        <button type="button" class="btn btn-outline-primary" id="personNextBtn">Next</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<style>
  .step-indicator {
    width: 32px;
    height: 32px;
    border-radius: 50%;
    background-color: #e0e0e0;
    color: #333;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: bold;
  }
  .step-indicator.active {
    background-color: #4a154b;
    color: white;
  }
</style>

  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.2/dist/js/bootstrap.bundle.min.js"></script>
  <script>
      document.addEventListener("DOMContentLoaded", function () {
          document.querySelectorAll(".dropdown").forEach(dropdown => {
              const checkboxes = dropdown.querySelectorAll(".option-checkbox");
              const dropdownButton = dropdown.querySelector(".dropdown-toggle");

              function updateButtonText() {
                  const checkedCount = dropdown.querySelectorAll(".option-checkbox:checked").length;
                  dropdownButton.textContent = checkedCount > 0 ? `${checkedCount} selected` : "Select Options";
              }

              checkboxes.forEach(checkbox => {
                  checkbox.addEventListener("change", updateButtonText);
              });
          });
      });

      function updatePageSize() {
          var pageSize = document.getElementById("pageSize").value;
          window.location.href = "?PageSize=" + pageSize + "&PageNumber=1";
      }
      
      function confirmDelete(id, name) {
          document.getElementById('personId').value = id;
          document.getElementById('personName').textContent = name;
          
          var deleteModal = new bootstrap.Modal(document.getElementById('deletePersonModal'));
          deleteModal.show();
      }
  </script>

<script>
  let personStep = 1;
  const totalPersonSteps = 3;

  const updateSteps = () => {
    for (let i = 1; i <= totalPersonSteps; i++) {
      document.getElementById(`personStep${i}`).classList.toggle("d-none", i !== personStep);
      document.getElementById(`stepIndicator${i}`).classList.toggle("active", i === personStep);
    }
    document.getElementById("personBackBtn").disabled = personStep === 1;
    document.getElementById("personNextBtn").textContent = personStep === totalPersonSteps ? "Finish" : "Next";
    document.getElementById("personSubmitBtn").classList.toggle("d-none", personStep !== totalPersonSteps);
  };

  document.getElementById("personNextBtn").addEventListener("click", () => {
    if (personStep === totalPersonSteps) {
      const submitBtn = document.getElementById("personSubmitBtn");
        submitBtn.classList.remove("d-none"); // temporarily show
        submitBtn.click();
    } else {
      personStep++;
      updateSteps();
    }
  });

  document.getElementById("personBackBtn").addEventListener("click", () => {
    if (personStep > 1) {
      personStep--;
      updateSteps();
    }
  });

  document.getElementById('updateModal').addEventListener('show.bs.modal', function (event) {
    const button = event.relatedTarget;
    const code = button.getAttribute('data-code');
    document.getElementById('personCode').value = code;
    console.log(code);
    personStep = 1;
    updateSteps();

    fetch(`/People/ViewPerson?code=${code}`)
      .then(res => res.text())
      .then(html => {
        const parser = new DOMParser();
        const doc = parser.parseFromString(html, 'text/html');
        const inputs = doc.querySelectorAll('input, textarea');
        const categoryField = document.querySelector('#personCategory');
        const categoryValue = doc.querySelector('[name="PersonRecord.Category"]')?.value;

        if (categoryField && categoryValue !== undefined) {
        categoryField.value = categoryValue;
        }

        inputs.forEach(src => {
          const target = document.querySelector(`#updateForm [name="${src.name}"]`);
          if (target) {
            if (target.type === 'checkbox') {
              target.checked = src.checked;
            } else {
              target.value = src.value;
            }
          }
        });
      });
  });
</script>

</body>
